<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间,作用就是对sql进行分类化管理,理解sql隔离 注意:使用mapper代理方法开发,namespace有特殊重要的作用,namespace等于mapper接口地址 -->
<mapper namespace="cn.com.blueline.dao.ActivityDao">

	<!--mapper作用:为DAO接口方法提供sql语句配置 -->

	<!-- int reduceNumber(long seckillId, Date killTime); <update id="reduceNumber"> 
		UPDATE seckill set number = number -1 where seckill_id = #{seckillId} AND 
		start_time <![CDATA[ <= ]]> #{killTime} AND end_time >= #{killTime} AND number 
		>0; </update> -->

	<!-- Activity queryById(long activityId); -->
	<select id="queryById" resultType="Activity" parameterType="long">
		<!-- SELECT activity_id,title,start_time,end_time,create_time -->
		SELECT
		*
		FROM we_activity
		WHERE activity_id = #{activityId}
	</select>

	<insert id="insertActivity" parameterType="cn.com.blueline.entity.Activity"  keyProperty="activityId">
		INSERT into
		we_activity(title,subhead,type,thumbnails,min_people,max_people,province,city,district,address,details_html,details_content,new_price,old_price,
		is_recommend,activity_order)
		VALUES
		(#{title},#{subhead},#{type},#{thumbnails},
		#{minPeople},#{maxPeople},#{province},#{city},#{district},#{address},#{detailsHtml},#{detailsContent},#{newPrice},#{oldPrice},
		#{isRecommend},#{activityOrder})
	</insert>

	<select id="queryAll" resultType="activity">
		SELECT *
		FROM
		we_activity where state <![CDATA[ <>  ]]>'9' ORDER
		BY create_time DESC
	</select>


	<update id="updateActivity" parameterType="activity">
		UPDATE
		we_activity
		SET
		title=#{title},thumbnails=#(thumbnails) WHERE activity_id
		=#{activityId}
	</update>

	<insert id="favoriteOrCancelActivity">
		INSERT INTO
		we_user_favorite(openid,activity_id,state)
		VALUES
		(#{0},#{1},#{2})
	</insert>

	<select id="queryStateByOpenIdAndActivityId" resultType="Integer">
		select f.state FROM we_user_favorite f
		WHERE f.openId = #{0} and f.activity_id= #{1}
		AND f.create_time=(select max(fm.create_time) from we_user_favorite fm
		where fm.openId=f.openid and fm.activity_id=f.activity_id)
	</select>
	
	<update id="updateActivityStateById">
		UPDATE
		we_activity
		SET
		state=#{state} WHERE activity_id = #{activityId}
	</update>


	<!-- List<Seckill> queryAll(int offset,int limit); <select id="queryAll" 
		resultType="Seckill"> SELECT seckill_id,name,number,start_time,end_time,create_time 
		FROM seckill ORDER BY create_time DESC limit #{offset},#{limit} </select> -->

	<!--mybatis调用存储过程 <select id="killByProcedure" statementType="CALLABLE"> 
		call execute_seckill( #{seckillId,jdbcType=BIGINT,mode=IN}, #{phone,jdbcType=BIGINT,mode=IN}, 
		#{killTime,jdbcType=TIMESTAMP,mode=IN}, #{result,jdbcType=INTEGER,mode=OUT} 
		) </select> -->

</mapper>
